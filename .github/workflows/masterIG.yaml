name: Punlishing IG for JFAGY without production of packages
on:
  push:
    branches: 
      - master
    paths:
      - 'sushi-config.yaml'
      - 'input/**'
      - '.github/workflows/masterIG.yaml'
  pull_request:
    branches: [ master ]
env:
  release_version : 20241125
jobs:
  turn1:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        ruby-version: ['3.2.1']
    environment: SSH_PORT_JPFHIR  # JAMI WG アップロードサイトに関するアクセス情報の環境名
    steps:
    - uses: actions/checkout@v4
    - name: Set up Ruby ${{ matrix.ruby-version }}
      uses: ruby/setup-ruby@ec02537da5712d66d4d50a0f33b7eb52773b5ed1
      with:
        ruby-version: ${{ matrix.ruby-version }} 
    - name: ssh key generate
      run: |
          echo "starting"
          echo "secrets.PERSONAL_TOKEN " ${{ secrets.PERSONAL_TOKEN }}
          echo "secrets.PERSONAL_TOKEN2 " ${{ secrets.PERSONAL_TOKEN2 }}
          curl -vv -H "Authorization: token ${{ secrets.PERSONAL_TOKEN }}" -H "Accept: application/vnd.github.everest-preview+json" "https://api.github.com/repos/jami-fhir-jp-wg/eReferral/dispatches" --data '{"event_type": "update", "client_payload": {"ref": "develop1.0"}}'
          curl -vv -H "Authorization: token ${{ secrets.PERSONAL_TOKEN }}" -H "Accept: application/vnd.github.everest-preview+json" "https://api.github.com/repos/jami-fhir-jp-wg/eDischargeSummary/dispatches" --data '{"event_type": "update", "client_payload": {"ref": "develop1.0"}}'

    - name: Setup npm
      uses: actions/setup-node@v2
      with:
        check-latest: true

    - name: Setup Sushi
      run: |
        sudo npm install -g fsh-sushi
  
    - name: Install Jekyll
      run: |
        sudo apt-get install jekyll
  
    - name: Download IG Publisher
      uses: Legion2/download-release-action@v2.1.0
      with:
        repository: HL7/fhir-ig-publisher
        tag: '1.8.9'
        path: .
        file: publisher.jar

    - name: Download the file
      uses: suisei-cn/actions-download-file@v1.4.0
      id: downloadfile1
      with:
        url: "https://jpfhir.jp/fhir/fhir_dotFHIR_packages.tgz"
        target: .
  
    - name: Prepare for using all dependent packages including Jp modified version of hl7.fhir.r4.core Package 
      env:
        JPPACKAGECOREtgz: fhir_dotFHIR_packages.tgz
      run: |
        ls -l .
        pwd
        echo '--1-'
        mkdir -p /home/runner/.fhir
        mv $JPPACKAGECOREtgz /home/runner/.fhir/
        cd /home/runner/.fhir
        tar xzf $JPPACKAGECOREtgz

    - name: cp tgz-temp/*.tgz       
      run: | 
        : # cp tgz-temp/*.tgz /home/runner/.fhir/packages
        : # cd /home/runner/.fhir/packages
        : # tar xzf hl7.terminology.r4-6.0.0.tgz

    - name: Run IG Publisher
      run: | 
        mkdir -p input-cache
        mv ./publisher.jar ./input-cache
        unset DISPLAY
        java -Xmx12G -Djava.awt.headless=true -jar ./input-cache/publisher.jar -ig ig.ini -tx n/a

    - name: prepare gtz files for upload to remote site
      run: | 
        ruby ./script/create_symbolic_link_from_file2url.rb
        : # 次の行のmakeSymbolicLink.bashは、直上のrubyスクリプトによって新たに作成されるbashスクリプトで、symbolic_linkを実際にln -s コマンドを順に実行して作成するスクリプト。
        : # cat makeSymbolicLink.bash
        cd output
        source ../makeSymbolicLink.bash
        
    - name: ssh key generate
      run: echo "$SSH_PRIVATE_KEY" > key && chmod 600 key; ls -l key
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_TO_JPFHIR }}

    - name: rsync remote-site-deploy
      run: |
        rsync -auzrv -e "ssh -i key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT_JPFHIR }}" --delete output download_files ${{ secrets.JAMIWG_USERID_AT_WEBHOST }}:${{ secrets.JAMIWG_WEBPATH }}/jpfhir.jp/fhir/core/terminology/JFAGY-temp/ --exclude .htaccess
        ssh -i key  -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  -p ${{ secrets.SSH_PORT_JPFHIR }} ${{ secrets.JAMIWG_USERID_AT_WEBHOST }}   'cd ${{ secrets.JAMIWG_WEBPATH }}/jpfhir.jp/fhir/core/terminology/JFAGY-temp/; cd download_files/sj; zip JFAGY_J9FN_20250401_R01-sjis.zip JFAGY_J9FN_20250401_R01.csv; cd ../utf8;zip JFAGY_J9FN_20250401_R01-utf8.zip JFAGY_J9FN_20250401_R01.csv'
        ssh -i key  -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  -p ${{ secrets.SSH_PORT_JPFHIR }} ${{ secrets.JAMIWG_USERID_AT_WEBHOST }}   'cd ${{ secrets.JAMIWG_WEBPATH }}/jpfhir.jp/fhir/core/terminology/JFAGY-temp/; mkdir -p ${{ env.release_version }}; rm -r ${{ env.release_version }};mv output ${{ env.release_version }}; rm download_files/sj/*.csv; rm download_files/utf8/*.csv; rm download_files/*.csv; mv download_files ${{ env.release_version }}/download_files'
