name: Ohe-Develp and  Dispatch

on:
  push:
    branches: 
      - develop1.0
    paths:
      - 'sushi-config.yaml'
      - 'input/**'
      - 'codesystems_org/**'
      - 'valuesets_org/**'
      - '.github/workflows/develop_forIG.yaml'
  pull_request:
    branches: [ develop1.0 ]


jobs:
  turn1:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['3.0']
    environment: SSH_PORT_JPFHIR  # JAMI WG アップロードサイトに関するアクセス情報の環境名
    steps:
    - uses: actions/checkout@v2
    - name: ssh key generate
      run: |
          echo "starting"
          echo "secrets.PERSONAL_TOKEN " ${{ secrets.PERSONAL_TOKEN }}
          echo "secrets.PERSONAL_TOKEN2 " ${{ secrets.PERSONAL_TOKEN2 }}
          curl -vv -H "Authorization: token ${{ secrets.PERSONAL_TOKEN }}" -H "Accept: application/vnd.github.everest-preview+json" "https://api.github.com/repos/jami-fhir-jp-wg/eReferral/dispatches" --data '{"event_type": "update", "client_payload": {"ref": "develop1.0"}}'
          curl -vv -H "Authorization: token ${{ secrets.PERSONAL_TOKEN }}" -H "Accept: application/vnd.github.everest-preview+json" "https://api.github.com/repos/jami-fhir-jp-wg/eDischargeSummary/dispatches" --data '{"event_type": "update", "client_payload": {"ref": "develop1.0"}}'

    - name: Setup npm
      uses: actions/setup-node@v2
      with:
        check-latest: true
    - name: Setup Sushi
      run: |
        sudo npm install -g fsh-sushi
    - name: Install Jekyll
      run: |
        sudo apt-get install jekyll

    - name: Download IG Publisher
      uses: Legion2/download-release-action@v2.1.0
      with:
        repository: HL7/fhir-ig-publisher
        tag: 'latest'
        path: .
        file: publisher.jar
    
    - name: covert original codesystems into abbreviated codesystems for IG, and mv codesystems_forIG
      run: |
        ./python/replaceIdBatchAbb.sh
        rm -rf  ./input/fsh/codesystems_forIG
        rm -rf  ./input/fsh/codesystems_org
        rm -rf  ./input/fsh/valuesets_org
        mv ./codesystems_forIG ./input/fsh
        mv ./valuesets_org ./input/fsh
        
    - name: Run IG Publisher        
      run: | 
        mkdir -p input-cache
        mv ./publisher.jar ./input-cache
        unset DISPLAY
        java -Xmx12G -Djava.awt.headless=true -jar ./input-cache/publisher.jar -ig ig.ini

    - name: replace url of html files referring base package
      run:  |
        : # https://simplifier.net/resolve?scope=jp-core.r4@1.1.1-snap&amp;canonical=http://jpfhir.jp/fhir/core/StructureDefinition/JP_Observation_Common"
        : #   ↓
        : # https://jpfhir.jp/fhir/core/1.1.1/StructureDefinition-jp-observation-common.html
        : # cd output
        : # for file in StructureDefinition-*.html
        : # do
        : #   python ../script/replaceUrls.py $file 1.1.1 >$file".2.html"
        : #   mv $file".2.html" $file
        : # done   
        : # cd ..
    - name: prepare gtz files for upload to remote site
      run: | 
        ruby ./script/create_symbolic_link_from_file2url.rb
        cat makeSymbolicLink.bash
        cd output
        source ../makeSymbolicLink.bash
        ls -l
        cd ..
        tar czf output.tgz output

    - name: ssh key generate
      run: echo "$SSH_PRIVATE_KEY" > key && chmod 600 key; ls -l key
      env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY_TO_JPFHIR }}
    - name: rsync remote-site-deploy
      run: |
        rsync -auzrv -e "ssh -i key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT_JPFHIR }}" --delete output.tgz  ${{ secrets.JAMIWG_USERID_AT_WEBHOST }}:${{ secrets.JAMIWG_WEBPATH }}/jpfhir.jp/fhir/core/terminology/ --exclude .htaccess
        ssh -i key  -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  -p ${{ secrets.SSH_PORT_JPFHIR }} ${{ secrets.JAMIWG_USERID_AT_WEBHOST }}   'cd ${{ secrets.JAMIWG_WEBPATH }}/jpfhir.jp/fhir/core/terminology/ ; tar xzf output.tgz; rm -rf ig ; cp -r  output ig'

